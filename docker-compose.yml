services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: backend-service
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DOCKER_MYSQL_PORT=3306
      - DOCKER_MYSQL_HOST=database-service
      - DOCKER_MYSQL_USER=kanver_user
      - DOCKER_MYSQL_PASSWORD=kanver_password
      - DOCKER_MYSQL_DB=kanver
    depends_on:
      database:
        condition: service_healthy
    expose:
      - "8080"

  database:
    image: mysql:8.0
    container_name: database-service
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=kanver_user
      - MYSQL_PASSWORD=kanver_password
      - MYSQL_DATABASE=kanver
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:


      - mysql_data:/var/lib/mysql
      - ./database/sql/schema.sql:/docker-entrypoint-initdb.d/1-create_tables.sql
      - ./database/sql/load_data.sql:/docker-entrypoint-initdb.d/2-load_data.sql
      - ./database/sql/mark_healthy.sql:/docker-entrypoint-initdb.d/3-mark_healthy.sql
      - ./database/dataset:/var/lib/mysql-files
    healthcheck:
      test: [
        "CMD-SHELL",
        "mysql -h localhost -ukanver_user -pkanver_password -e \"SELECT status FROM kanver.initialization_flag WHERE status='completed' LIMIT 1\""
      ]
      interval: 1s
      retries: 20
      start_period: 1s
      timeout: 1s

volumes:
  mysql_data: