services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: backend-service
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    command: flask run --host=0.0.0.0 --port=8080
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - DOCKER_MYSQL_HOST=database-service
      - DOCKER_MYSQL_USER=kanver_user
      - DOCKER_MYSQL_PASSWORD=kanver_password
      - DOCKER_MYSQL_DB=kanver
    depends_on:
      - database
      - redis
      
    expose:
      - "8080"

  database:
    image: mysql:8.0
    container_name: database-service
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=kanver_user
      - MYSQL_PASSWORD=kanver_password
      - MYSQL_DATABASE=kanver
    
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/1-create_tables.sql
      - ./database/load_data.sql:/docker-entrypoint-initdb.d/2-load_data.sql
      - ./database/dataset:/var/lib/mysql-files

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: celery_worker
    volumes:
      - ./tasks:/app/tasks
    working_dir: /app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    command: celery -A tasks worker --loglevel=info
    depends_on:
      - redis

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: celery_beat
    volumes:
      - ./tasks:/app/tasks
    working_dir: /app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    command: celery -A tasks beat --loglevel=debug
    depends_on:
      - redis

volumes:
  mysql_data:
