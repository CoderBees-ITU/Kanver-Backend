name: Pytest Unit Tests

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Copy .env File (if needed)
      - name: Copy .env File
        run: |
          cp .env.example .env || (echo "No .env.example found, exiting..." && exit 1)
      # Step 3: Cache Docker Compose
      - name: Cache Docker Compose
        id: cache-compose
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/docker-compose
          key: docker-compose-{{ runner.os }}-latest
          restore-keys: |
            docker-compose-

      # Step 4: Install Docker Compose if Cache Miss
      - name: Install Docker Compose
        if: steps.cache-compose.outputs.cache-hit != 'true'
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Step 5: Run Tests

      - name: Run Tests
        run: |
          docker-compose -f docker-compose.test.yml up --exit-code-from backend
